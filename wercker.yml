box: node:6.10

build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # http://devcenter.wercker.com/docs/steps/index.html
  #steps:
  #  - script:
  #      name: echo
  #      code: |
  #        echo "hello world!"

build:
  steps:
    # Run 'npm install'
    - script:
        name: A step that executes `npm install` command
        code: npm install  

echoWerckerVars:
  steps:
    # Just echo the vars for debugging
    - script:
        name: echo
        code: |
          echo "
                WERCKER_APPLICATION_OWNER_NAME: $WERCKER_APPLICATION_OWNER_NAME,
                WERCKER_APPLICATION_NAME: $WERCKER_APPLICATION_NAME,
                WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT,
                WERCKER_ROOT: $WERCKER_ROOT"


deploy:
  steps:
    # https://github.com/wercker/step-bash-template
    # This Wercker step will look for files in our repo with a .template extension.
    # It will expand any environment variables in those files, then remove the
    # template extension.
    - bash-template

    - script:
      name: generate and save kubeconfig
      code: |
        echo "create /root/.kube"
        mkdir -p /root/.kube

        echo "Write config to file using KUBERNETES_MASTER: ${KUBERNETES_MASTER}, KUBERNETES_CLUSTER_ID: ${KUBERNETES_CLUSTER_ID}"
        echo "
        apiVersion: v1
        clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: ${KUBERNETES_MASTER}
            name: cluster-${KUBERNETES_CLUSTER_ID}
        contexts:
          - context:
              cluster: cluster-${KUBERNETES_CLUSTER_ID}
              user: user-${KUBERNETES_CLUSTER_ID}
            name: context-${KUBERNETES_CLUSTER_ID}
        current-context: context-${KUBERNETES_CLUSTER_ID}
        kind: \"\"
        users:
          - name: user-${KUBERNETES_CLUSTER_ID}
            user:
              token: ${KUBERNETES_TOKEN}
        " > /root/.kube/config
    - script:
      name: display kubeconfig
      code: |
        cat /root/.kube/config
 
